{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register-routing.module.ts","webpack:///src/app/pages/register/register.module.ts","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","fb","router","alertController","loadingController","chatService","credentialForm","group","email","required","password","minLength","create","loading","present","register","value","then","user","dismiss","navigateByUrl","replaceUrl","err","header","message","buttons","alert","get","selector","template"],"mappings":"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","file":"pages-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Registro</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"credentialForm\\\">\\r\\n    <ion-item>\\r\\n      <ion-input\\r\\n        placeholder=\\\"Correo electrónico\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        autofocus=\\\"true\\\"\\r\\n        clearInput=\\\"true\\\"\\r\\n      ></ion-input>\\r\\n    </ion-item>\\r\\n    <div *ngIf=\\\"(email.dirty || email.touched) && email.errors\\\" class=\\\"errors\\\">\\r\\n      <span *ngIf=\\\"email.errors?.required\\\">Campo requerido</span>\\r\\n      <span *ngIf=\\\"email.errors?.email\\\">El correo es incorrecto</span>\\r\\n    </div>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-input\\r\\n      placeholder=\\\"Contraseña\\\"\\r\\n      type=\\\"password\\\"\\r\\n      formControlName=\\\"password\\\"\\r\\n      clearInput=\\\"true\\\"\\r\\n    ></ion-input>\\r\\n    </ion-item>\\r\\n    <div *ngIf=\\\"(password.dirty || password.touched) && password.errors\\\" class=\\\"errors\\\">\\r\\n      <span *ngIf=\\\"password.errors?.required\\\">Campo requerido</span>\\r\\n      <span *ngIf=\\\"password.errors?.minlength\\\">La contraseña debe tener mínimo 6 caracteres</span>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n\\r\\n  <ion-button (click)=\\\"register()\\\" expand=\\\"full\\\" color=\\\"secondary\\\">REGISTRARSE</ion-button>\\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label> ¿Ya posees una cuenta? </ion-label>\\r\\n    <ion-button (click)=\\\"login()\\\" fill=\\\"outline\\\" color=\\\"secondary\\\">Inicia sesión</ion-button>\\r\\n  </ion-item>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \".errors {\\n  font-size: small;\\n  color: #fff;\\n  background: var(--ion-color-danger);\\n  padding-left: 15px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsbUNBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvcnMge1xyXG4gIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDVweDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, LoadingController } from '@ionic/angular';\r\nimport { ChatService } from 'src/app/services/chat.service';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  credentialForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private alertController: AlertController,\r\n    private loadingController: LoadingController,\r\n    private chatService: ChatService) { }\r\n\r\n  ngOnInit() {\r\n    this.credentialForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  async register() {\r\n    const loading = await this.loadingController.create();\r\n    await loading.present();\r\n\r\n    this.chatService.register(this.credentialForm.value).then(user => {\r\n      loading.dismiss();\r\n      this.router.navigateByUrl('/verification-email', { replaceUrl: true });\r\n    }, async err => {\r\n      loading.dismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Sign up failed',\r\n        message: err.message,\r\n        buttons: ['OK'],\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n\r\n  login(){\r\n    this.router.navigateByUrl('/', { replaceUrl: true });\r\n  }\r\n  \r\n // Easy access for form fields\r\n  get email() {\r\n    return this.credentialForm.get('email');\r\n  }\r\n  \r\n  get password() {\r\n    return this.credentialForm.get('password');\r\n  }\r\n\r\n}\r\n"]}